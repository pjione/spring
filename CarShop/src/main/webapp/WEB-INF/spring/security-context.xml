<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
		     xmlns:beans="http://www.springframework.org/schema/beans"
		     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		     xsi:schemaLocation="http://www.springframework.org/schema/beans
								 http://www.springframework.org/schema/beans/spring-beans.xsd
								 http://www.springframework.org/schema/security
								 http://www.springframework.org/schema/security/spring-security.xsd">

<!--     <http auto-config="true" 기본 로그인 창 사용시 use-expressions="true">  -->
    <http use-expressions="true"> 
	<intercept-url pattern="/cars/add/**" access="hasAuthority('USER_MANAGER')" />
	<intercept-url pattern="/**" access="permitAll" />
 	<form-login login-page="/login"
				default-target-url="/cars"
				authentication-failure-url="/loginfailed"
				username-parameter="username"
				password-parameter="password" />
	<csrf disabled = "true"/>
	<logout logout-url = "/logout" logout-success-url = "/login" invalidate-session="true"/>
    </http> 

	<!-- 암호화를 위한 passwordEncoder -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- DB연동은 data_source만 지정해주면 된다, 테이블이름은 정확히.   users 랑 authorities -->
    <authentication-manager alias="authenticationManager"> 
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"/>
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>

